
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 7.5%; /* Dark Grey #121212 */
    --foreground: 0 0% 98%; /* Light Gray */

    --card: 0 0% 10%; /* Slightly Lighter Dark Grey */
    --card-foreground: 0 0% 95%;

    --popover: 0 0% 5%;
    --popover-foreground: 0 0% 98%;

    --primary: 207 90% 54%; /* Saturated Blue #42A5F5 */
    --primary-foreground: 0 0% 98%;
    --primary-dimmed: 207 75% 45%; /* Dimmed primary for toast */

    --secondary: 240 4% 18%;
    --secondary-foreground: 0 0% 98%;

    --muted: 0 0% 15%;
    --muted-foreground: 0 0% 60%;

    --accent: 291 64% 58%; /* Vibrant Violet #AB47BC */
    --accent-foreground: 0 0% 98%;
    --accent-dimmed: 291 50% 50%; /* Dimmed accent for toast */

    --destructive: 0 70% 50%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 20%;
    --input: 0 0% 12%;
    --ring: 291 64% 58%; /* Changed from 207 90% 48% to match accent color */

    --radius: 0.5rem;

    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;

    --sidebar-background: 0 0% 5%;
    --sidebar-foreground: 0 0% 80%;
    --sidebar-primary: 207 90% 54%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 291 64% 58%;
    --sidebar-accent-foreground: 0 0% 98%;
    --sidebar-border: 0 0% 15%;
    --sidebar-ring: 207 90% 48%;
    
    --instabharat-logo-from: #a100ff;
    --instabharat-logo-via: #ffc300;
    --instabharat-logo-to: #ff7300;

    --instabharat-action-btn-from: #bc1888;
    --instabharat-action-btn-to: #f09433;

    --incoming-message-bubble-dark: 0 0% 12%;
    --system-message-bubble-dark: 200 50% 15%;
    
    --gradient-fab-home-from: var(--instabharat-logo-from);
    --gradient-fab-home-to: var(--instabharat-logo-to);
    --tab-active-underline-color: var(--instabharat-logo-from);

    --status-ring-viewed-border: 0 0% 30%; /* Color for viewed status rings */
    --vh: 1vh; /* Fallback for dynamic vh variable */
  }
}

@layer base {
  html {
    @apply h-full overflow-hidden; 
    scrollbar-width: none; 
    -ms-overflow-style: none; 
  }
  html::-webkit-scrollbar {
    display: none; 
  }

  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground h-full overflow-hidden; 
    font-family: var(--font-inter), sans-serif;
    @apply antialiased;
    scrollbar-width: none; 
    -ms-overflow-style: none; 
  }
  body::-webkit-scrollbar {
    display: none; 
  }

  a:not([class*="bg-"], [class*="text-"], [class*="border-"], [data-nostyle-link]) {
    @apply text-primary hover:text-primary/80; 
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes spin-slow {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.animate-spin-slow {
  animation: spin-slow 10s linear infinite;
}

@keyframes spin-slow-counter {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(-360deg); }
}

.animate-spin-slow-counter {
  animation: spin-slow-counter 10s linear infinite;
}

.hide-scrollbar {
  scrollbar-width: none;
  -ms-overflow-style: none;
}
.hide-scrollbar::-webkit-scrollbar {
  display: none;
}

.custom-scrollbar-dark {
  scrollbar-width: thin;
  scrollbar-color: hsl(var(--muted-foreground)) hsl(var(--border));
}

.custom-scrollbar-dark::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.custom-scrollbar-dark::-webkit-scrollbar-track {
  background: hsl(var(--border));
  border-radius: 10px;
}

.custom-scrollbar-dark::-webkit-scrollbar-thumb {
  background: hsl(var(--muted-foreground));
  border-radius: 10px;
}

.custom-scrollbar-dark::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--foreground) / 0.8);
}

/* Styling for AuraBar horizontal scroll */
.aura-horizontal-scroll div[data-radix-scroll-area-viewport] {
  overflow-x: auto !important; /* Ensure horizontal scroll is possible */
  scrollbar-width: none; /* For Firefox */
  -ms-overflow-style: none; /* For Internet Explorer and Edge */
}
.aura-horizontal-scroll div[data-radix-scroll-area-viewport]::-webkit-scrollbar {
  display: none; /* For Chrome, Safari, and Opera */
}


.hide-vertical-scrollbar > div[data-radix-scroll-area-viewport]::-webkit-scrollbar {
  display: none;
}
.hide-vertical-scrollbar > div[data-radix-scroll-area-viewport] {
  scrollbar-width: none; 
  -ms-overflow-style: none; 
}


@layer utilities {
  .message-bubble {
    @apply p-2.5 max-w-[70%] sm:max-w-[60%] md:max-w-[50%] mb-1 shadow-sm break-words;
  }
  .message-bubble-outgoing {
    @apply bg-gradient-to-br from-[hsl(var(--background))] to-[hsl(var(--muted))] text-secondary-foreground ml-auto rounded-tl-xl rounded-tr-xl rounded-bl-xl rounded-br-xl; 
  }
  .message-bubble-incoming {
    @apply bg-[hsl(var(--incoming-message-bubble-dark))] text-foreground mr-auto rounded-xl; 
  }
  .message-bubble-system {
    @apply bg-[hsl(var(--system-message-bubble-dark))] text-muted-foreground mx-auto text-center text-xs p-1.5 rounded-md;
  }

  .text-gradient-primary-accent {
    @apply bg-gradient-to-r from-[var(--primary)] via-[var(--accent)] to-[var(--accent)] text-transparent bg-clip-text;
  }
  
  .text-gradient-instabharat-logo {
    @apply bg-gradient-to-r from-[var(--instabharat-logo-from)] via-[var(--instabharat-logo-via)] to-[var(--instabharat-logo-to)] text-transparent bg-clip-text;
  }

  .bg-gradient-instabharat-ring {
    @apply bg-gradient-to-r from-[var(--instabharat-logo-from)] via-[var(--instabharat-logo-via)] to-[var(--instabharat-logo-to)];
  }

  .text-gradient-bharatconnect {
    @apply bg-gradient-to-r from-primary via-accent to-accent; 
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }

  .text-gradient-nav-active {
    @apply bg-gradient-to-r from-accent to-primary; /* Violet to Blue */
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }

  .bg-gradient-fab-home {
    @apply bg-gradient-to-br from-[var(--gradient-fab-home-from)] via-[var(--instabharat-logo-via)] to-[var(--gradient-fab-home-to)];
  }

  .bg-gradient-header-dark {
    @apply bg-gradient-to-b from-[hsl(var(--card))] to-[hsl(var(--background))];
  }

  .bg-true-black {
    background-color: #000000;
  }
  .text-true-black-foreground {
    color: hsl(var(--foreground));
  }
  .border-true-black-muted {
    border-color: hsl(var(--muted));
  }
  .placeholder-true-black-muted::placeholder {
    color: hsl(var(--muted-foreground));
  }

  .chat-input-sweep-border-wrapper {
    position: relative;
    display: flex;
    border-radius: 9999px; /* Fully rounded */
    padding: 2px; /* This creates the border thickness */
    background-color: hsl(var(--border)); /* Default border color (unfocused state) */
    overflow: hidden; /* Important for pseudo-element clipping */
    transition: background-color 300ms ease-out, opacity 300ms ease-out; /* For unfocus */
  }

  .chat-input-sweep-border-wrapper::before {
    content: "";
    position: absolute;
    width: 200%; /* Make it larger to ensure coverage during rotation */
    height: 200%;
    top: -50%; /* Center the oversized pseudo-element */
    left: -50%;
    border-radius: inherit; /* Match wrapper's rounding */
    background-image: conic-gradient(from 0deg, hsl(var(--accent)), hsl(var(--primary)), hsl(var(--accent)));
    z-index: 0; /* Sits behind the textarea's own background */
    animation: spin-slow 10s linear infinite paused; /* Paused by default */
    opacity: 0; /* Hidden by default */
    transition: opacity 300ms ease-in-out;
  }
  
  .chat-input-sweep-border-wrapper:focus-within {
    background-color: transparent; /* Hide wrapper bg to let ::before show */
  }

  .chat-input-sweep-border-wrapper:focus-within::before {
    opacity: 1; /* Show spinning gradient on focus */
    animation-play-state: running; /* Start animation */
  }

  .chat-input-sweep-border-textarea {
    position: relative; /* To sit on top of the ::before */
    z-index: 1;
    background-color: hsl(var(--input)); /* Dark background for the text area itself */
    color: hsl(var(--foreground));
    border: none !important; /* Remove default textarea border */
    outline: none !important; /* Remove default focus outline */
  }
  .chat-input-sweep-border-textarea::-webkit-scrollbar { display: none; }
  .chat-input-sweep-border-textarea { -ms-overflow-style: none;  scrollbar-width: none; }


  .bg-gradient-bharatconnect-bubble {
    @apply bg-gradient-to-r from-primary to-accent; 
  }

  .bg-gradient-bharatconnect-toast {
    @apply bg-gradient-to-r from-[hsl(var(--primary-dimmed))] to-[hsl(var(--accent-dimmed))];
  }

  /* iOS Safari Keyboard Fallback */
  body.keyboard-open .chat-input-ios-fallback {
    position: absolute !important; /* Override sticky */
    bottom: 300px !important; /* Estimated keyboard height, adjust as needed */
    left: 0;
    right: 0;
    /* Ensure it takes full width if it becomes absolute and padding is removed by other logic */
    padding-left: theme('spacing.2'); /* Match original padding */
    padding-right: theme('spacing.2');
    padding-top: theme('spacing.2'); 
    /* padding-bottom will be handled by its content or might not be needed if an exact height is set */
    background-color: hsl(var(--background)); /* Ensure it has a background */
  }

  .focus-visible-gradient-border-apply {
    border: 2px solid transparent; /* Important: border must be transparent */
    background-image: linear-gradient(hsl(var(--input)), hsl(var(--input))), /* Inner background color, changed from --background */
                      linear-gradient(to right, hsl(var(--accent)), hsl(var(--primary))); /* Gradient for border */
    background-origin: border-box; /* Gradient starts from border edge */
    background-clip: padding-box, border-box; /* Inner bg clips to padding, gradient clips to border */
    /* border-radius is inherited from the component's `rounded-md` class */
  }

  /* Swipe Animations */
  .swipeable-page-content {
    transition: transform 0.3s ease-out;
    width: 100%;
    height: 100%;
    will-change: transform;
  }
  .swipe-out-left {
    animation: swipeOutLeft 0.3s ease-out forwards;
  }
  .swipe-out-right {
    animation: swipeOutRight 0.3s ease-out forwards;
  }
  /* For incoming page, if we can control it */
  .swipe-in-left {
    animation: swipeInLeft 0.3s ease-out forwards;
  }
  .swipe-in-right {
    animation: swipeInRight 0.3s ease-out forwards;
  }

  @keyframes swipeOutLeft {
    from { transform: translateX(0); opacity: 1; }
    to { transform: translateX(-100%); opacity: 0; }
  }
  @keyframes swipeOutRight {
    from { transform: translateX(0); opacity: 1; }
    to { transform: translateX(100%); opacity: 0; }
  }
  @keyframes swipeInLeft {
    from { transform: translateX(100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }
  @keyframes swipeInRight {
    from { transform: translateX(-100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }
}


    

    
